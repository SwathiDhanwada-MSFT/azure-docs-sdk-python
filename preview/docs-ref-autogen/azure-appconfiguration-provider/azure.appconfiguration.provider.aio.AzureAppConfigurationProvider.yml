### YamlMime:PythonClass
uid: azure.appconfiguration.provider.aio.AzureAppConfigurationProvider
name: AzureAppConfigurationProvider
fullName: azure.appconfiguration.provider.aio.AzureAppConfigurationProvider
module: azure.appconfiguration.provider.aio
inheritances:
- collections.abc.Mapping
- typing.Generic
summary: 'Provides a dictionary-like interface to Azure App Configuration settings.
  Enables loading of sets of configuration

  settings from Azure App Configuration into a Python application. Enables trimming
  of prefixes from configuration

  keys. Enables resolution of Key Vault references in configuration settings.'
constructor:
  syntax: AzureAppConfigurationProvider()
methods:
- uid: azure.appconfiguration.provider.aio.AzureAppConfigurationProvider.close
  name: close
  summary: Closes the connection to Azure App Configuration.
  signature: async close() -> None
- uid: azure.appconfiguration.provider.aio.AzureAppConfigurationProvider.get
  name: get
  summary: Returns the value of the specified key. If the key does not exist, returns
    the default value.
  signature: 'get(key: str, default: Optional[str] = None) -> str'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.appconfiguration.provider.aio.AzureAppConfigurationProvider.items
  name: items
  summary: 'Returns a list of key-value pairs loaded from Azure App Configuration.
    Any values that are Key Vault references

    will be resolved.'
  signature: items() -> Iterable[Tuple[str, str]]
- uid: azure.appconfiguration.provider.aio.AzureAppConfigurationProvider.keys
  name: keys
  summary: Returns a list of keys loaded from Azure App Configuration.
  signature: keys() -> Iterable[str]
- uid: azure.appconfiguration.provider.aio.AzureAppConfigurationProvider.values
  name: values
  summary: 'Returns a list of values loaded from Azure App Configuration. Any values
    that are Key Vault references will be

    resolved.'
  signature: values() -> Iterable[str]
